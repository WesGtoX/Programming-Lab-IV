/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CategoriaDAO;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Categoria;

/**
 *
 * @author wesley
 */
public class FormCategoria extends javax.swing.JFrame {

    /**
     * Creates new form FormProduto
     */
    public FormCategoria() {
        initComponents();
        configurarFormulario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNomeCategoria = new javax.swing.JLabel();
        txtNomeCategoria = new javax.swing.JTextField();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        lblPesquisar = new javax.swing.JLabel();
        rdbId = new javax.swing.JRadioButton();
        rdbCategoria = new javax.swing.JRadioButton();
        txtPesquisar = new javax.swing.JTextField();
        scpPesquisar = new javax.swing.JScrollPane();
        tbCategoria = new javax.swing.JTable();
        lblTotalRegistros = new javax.swing.JLabel();
        txtTotalRegistros = new javax.swing.JTextField();
        btnInserirProduto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblId.setText("ID");

        lblNomeCategoria.setText("Nome da Categoria");

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblPesquisar.setText("Pesquisar");

        rdbId.setText("ID");

        rdbCategoria.setText("Categoria");

        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyReleased(evt);
            }
        });

        tbCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCategoriaMouseClicked(evt);
            }
        });
        scpPesquisar.setViewportView(tbCategoria);

        lblTotalRegistros.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblTotalRegistros.setText("Total de registros");

        btnInserirProduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnInserirProduto.setText("Inserir Produto");
        btnInserirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblId)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblNomeCategoria)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtNomeCategoria)))
                    .addComponent(scpPesquisar)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rdbId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdbCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPesquisar))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTotalRegistros)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnInserirProduto))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblPesquisar))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNomeCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir)
                    .addComponent(btnCancelar))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbId)
                    .addComponent(rdbCategoria)
                    .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scpPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalRegistros)
                    .addComponent(txtTotalRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInserirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        estado(true);
        
        // Limpar campos
        limparCampos();
        
        txtNomeCategoria.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        estado(false);
        
        // Criar um objeto para parametrizar a operação
        Categoria p = new Categoria();
        
        // Recuperar o NOME da categoria
        p.setNome(txtNomeCategoria.getText());
        
        int id = -1;
        if (txtId.getText().isEmpty()) {
            // Inserir o REGISTRO na tabela
//            id = new CategoriaDAO().inserir(p);
        } else {
            // Atualizar o REGISTRO tabela
//            p.setId(Integer.parseInt(txtId.getText()));
//            id = new CategoriaDAO().atualizar(p);
        }
        if (id != -1) {
            txtId.setText(Integer.toString(id));
            
            // Preencher tabela com dados do banco
            preencherTabela(new CategoriaDAO().listar());
            
            // Limpar campos
            limparCampos();
            
            JOptionPane.showMessageDialog(null, "Operação realizada com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possível realizar a operação!!");
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (txtId.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Selecione um registro para edição.");
            estado(false);
        } else {
            estado(true);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        
      if (txtId.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Selecione um registro para excluir.");
            estado(false);
        }else{
            int resp = JOptionPane.showConfirmDialog(null, 
                "Tem certeza que deseja excluir o registro?",
                "Controle de Produtos", JOptionPane.YES_NO_OPTION);
            
            if (resp == JOptionPane.YES_OPTION){
                // Deletar o REGISTRO tabela
                int id = Integer.parseInt(txtId.getText());
//                new CategoriaDAO().deletar(id);
                
                // Preencher tabela com dados do banco
                preencherTabela(new CategoriaDAO().listar());

                // Limpar campos
                limparCampos();
                JOptionPane.showMessageDialog(null, "Operação realizada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Operação cancelada!!");
            }
            estado(false);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        estado(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tbCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCategoriaMouseClicked
        int linha = tbCategoria.getSelectedRow();
        if (linha >= 0) {
            txtId.setText(tbCategoria.getValueAt(linha, 0).toString());
            txtNomeCategoria.setText(tbCategoria.getValueAt(linha, 1).toString());

//            Categoria c = (Categoria)tbCategoria.getValueAt(linha, 2);
//            cbxCategoria.getModel().setSelectedItem(c);
        }
    }//GEN-LAST:event_tbCategoriaMouseClicked

    private void txtPesquisarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyReleased
        
        // Pesquisar por NOME e ID
        String chave = txtPesquisar.getText();
        List<Categoria> resultado = null;
        
        if (chave.isEmpty()) {
            resultado = new CategoriaDAO().listar();
        } else {
            if (rdbCategoria.isSelected()) {     // Pesquisar por NOME
//                resultado = new CategoriaDAO().pesquisarPorNome(chave);
            } else if (rdbId.isSelected()) {    // Pesquisar por ID
//                resultado = new CategoriaDAO().pesquisarPorId(Integer.parseInt(chave));
            }
        }
        
        if (resultado != null) {
            preencherTabela(resultado);
        }
    }//GEN-LAST:event_txtPesquisarKeyReleased

    private void btnInserirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirProdutoActionPerformed
        FormProduto frmp = new FormProduto();
        frmp.setVisible(true);
    }//GEN-LAST:event_btnInserirProdutoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormCategoria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormCategoria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnInserirProduto;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNomeCategoria;
    private javax.swing.JLabel lblPesquisar;
    private javax.swing.JLabel lblTotalRegistros;
    private javax.swing.JRadioButton rdbCategoria;
    private javax.swing.JRadioButton rdbId;
    private javax.swing.JScrollPane scpPesquisar;
    private javax.swing.JTable tbCategoria;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeCategoria;
    private javax.swing.JTextField txtPesquisar;
    private javax.swing.JTextField txtTotalRegistros;
    // End of variables declaration//GEN-END:variables

    private void configurarFormulario() {
        this.setTitle("Controle de Categoria");
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        txtId.setEnabled(false);
        txtTotalRegistros.setEnabled(false);
        
        ButtonGroup bg =new ButtonGroup();
        bg.add(rdbId);
        bg.add(rdbCategoria);
        rdbCategoria.setSelected(true);
        
        // functions init
        configurarTabela();
        estado(false);
        preencherTabela(new CategoriaDAO().listar());
    }
    
    private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel(
            new Object[]{"ID","Nome da Categoria"}, 0) {
                
            @Override
            public boolean isCellEditable(int row, int colum) {
                return false;
            }
        };
        tbCategoria.setModel(m);
    }
    
    private void estado(boolean e) {
        txtNomeCategoria.setEnabled(e);
        btnSalvar.setEnabled(e);

        txtPesquisar.setEnabled(!e);
        btnNovo.setEnabled(!e);
        btnEditar.setEnabled(!e);
        btnExcluir.setEnabled(!e);
        btnCancelar.setEnabled(e);
    }
    
    private void preencherTabela(List<Categoria> lista) {
        if (lista != null) {
            if (lista.size() > 0) {
                configurarTabela();
                DefaultTableModel m = (DefaultTableModel)tbCategoria.getModel();
                for (Categoria c : lista) {
                    m.addRow(new Object[] {
                        c.getId(),
                        c.getNome(),
                    });
                }
                tbCategoria.setModel(m);
                txtTotalRegistros.setText(Integer.toString(lista.size()));
            }
        }
    }
    
    private void limparCampos() {
        txtId.setText("");
        txtNomeCategoria.setText("");
    }
}
